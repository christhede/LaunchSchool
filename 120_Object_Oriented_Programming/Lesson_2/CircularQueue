class CircularQueue
  @oldest_index = 0
  STAR = '*'
  
  def initialize(queue_size)
    @array = Array.new(queue_size, nil)
    @current_index = -queue_size
    @queue_size = queue_size
  end
  
  def enqueue
    loop do
      if @array.empty?
        @array[@current_index] = STAR
        @current_index += 1
        break
      elsif @array[@current_index] == nil
        @array[@current_index] = STAR
        @current_index += 1
        break
      else
        @current_index += 1
      end
      if @current_index == 0
        @current_index = -@queue_size
      end
    end
  end
  
  def dequeue
    
  end
  
  def to_s
    @array.to_s
  end
end

circle = CircularQueue.new(3)
puts circle.enqueue
puts circle.enqueue
puts circle.enqueue
puts circle


# if array[0].empty? || array[0].empty? && array[1].empty?
# delete box 2
# if array[1].empty? || array[1].empty? && array[2].empty?
#delete box 0
# if array[2].empty? || array[2].empty? && array[0].empty?
# delete box 1

# looping structure
# oldest_index = 0
# if array[num].empty?


#enque
#if array.empty? 
# array[current_index] = '*'
# current_array += 1
# elsif array[current_index].empty?
# array[current_index] = '*'
# current_array += 1
  # if current_array == 0
  # current_array = -queue_size



#dequeue
# if array.full? 
# oldest_index += 1

